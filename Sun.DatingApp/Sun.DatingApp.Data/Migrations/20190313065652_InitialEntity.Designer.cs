// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sun.DatingApp.Data.Database;

namespace Sun.DatingApp.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190313065652_InitialEntity")]
    partial class InitialEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.Basic.Occupation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("ParentCode")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<Guid?>("ParentId");

                    b.HasKey("Id");

                    b.ToTable("Occupation","basic");
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.Basic.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CityCode")
                        .HasMaxLength(20);

                    b.Property<float>("Lat")
                        .HasMaxLength(60);

                    b.Property<int>("LayerLevel");

                    b.Property<float>("Lng")
                        .HasMaxLength(60);

                    b.Property<string>("MergerName")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("ParentCode");

                    b.Property<Guid?>("ParentId");

                    b.Property<string>("PinYin")
                        .HasMaxLength(100);

                    b.Property<int>("RegionCode");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50);

                    b.Property<string>("ZipCode")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Region","basic");
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.System.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedById");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedById");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("Forbiden");

                    b.Property<DateTime?>("LatestLoginAt");

                    b.Property<DateTime?>("LockoutEndAt");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.Property<Guid?>("RefreshToken");

                    b.Property<Guid>("RoleId");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedById");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Account","system");
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.System.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedById");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedById");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Intro")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("TagColor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedById");

                    b.HasKey("Id");

                    b.ToTable("Menu","system");
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.System.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedById");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedById");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<Guid?>("ParentId");

                    b.Property<string>("Remark")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedById");

                    b.HasKey("Id");

                    b.ToTable("Organization","system");
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.System.Page", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedById");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedById");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Intro")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<Guid>("MenuId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("TagColor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedById");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Page","system");
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.System.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedById");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedById");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Intro")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("PageId");

                    b.Property<string>("TagColor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedById");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.ToTable("Permission","system");
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.System.ProfilePicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedById");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedById");

                    b.Property<string>("FileLength")
                        .HasMaxLength(20);

                    b.Property<string>("FileName")
                        .HasMaxLength(100);

                    b.Property<string>("FileType")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedById");

                    b.Property<string>("Url")
                        .HasMaxLength(200);

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ProfilePicture","system");
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.System.Prompt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedById");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedById");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("LastInfo")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<Guid>("OrganizationId");

                    b.Property<int>("UpdateNum");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedById");

                    b.HasKey("Id");

                    b.ToTable("Prompt","system");
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.System.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedById");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedById");

                    b.Property<string>("Intro")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedById");

                    b.HasKey("Id");

                    b.ToTable("Role","system");

                    b.HasData(
                        new
                        {
                            Id = new Guid("917cfe90-a330-4a06-a3ba-577fe4418568"),
                            Active = false,
                            CreatedAt = new DateTime(2019, 3, 13, 14, 56, 52, 552, DateTimeKind.Local).AddTicks(6581),
                            Deleted = false,
                            Intro = "超级管理员拥有所有的权限",
                            Name = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("3711b967-cfb8-4e48-9db6-551ad2d48a31"),
                            Active = false,
                            CreatedAt = new DateTime(2019, 3, 13, 14, 56, 52, 553, DateTimeKind.Local).AddTicks(6072),
                            Deleted = false,
                            Intro = "管理员用于管理用户权限",
                            Name = "管理员"
                        },
                        new
                        {
                            Id = new Guid("6d494fed-e660-42ce-89c5-27699e2dadcd"),
                            Active = false,
                            CreatedAt = new DateTime(2019, 3, 13, 14, 56, 52, 553, DateTimeKind.Local).AddTicks(6079),
                            Deleted = false,
                            Intro = "可以使用基本功能",
                            Name = "用户"
                        });
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.System.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedById");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedById");

                    b.Property<Guid>("PageId");

                    b.Property<Guid>("PermissionId");

                    b.Property<Guid>("RoleId");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedById");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermission","system");
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.System.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<Guid>("BaseAddressId");

                    b.Property<DateTime>("Birthday");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedById");

                    b.Property<Guid>("CurrentAddressId");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedById");

                    b.Property<string>("Intro")
                        .HasMaxLength(400);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("OccupationId");

                    b.Property<string>("PhoneNum")
                        .HasMaxLength(20);

                    b.Property<Guid?>("ProfilePictureId");

                    b.Property<string>("QQ")
                        .HasMaxLength(20);

                    b.Property<bool>("Sex");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedById");

                    b.Property<string>("WeChart")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("UserInfo","system");
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.System.Account", b =>
                {
                    b.HasOne("Sun.DatingApp.Data.Entities.System.Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.System.Permission", b =>
                {
                    b.HasOne("Sun.DatingApp.Data.Entities.System.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sun.DatingApp.Data.Entities.System.RolePermission", b =>
                {
                    b.HasOne("Sun.DatingApp.Data.Entities.System.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
